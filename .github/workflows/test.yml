name: Test
on:
  workflow_dispatch:

jobs:
  test-installation:    
    runs-on: ubuntu-latest
    steps:
    - name: "Setup Node.js"
      uses: actions/setup-node@v3
      with:
        node-version: 14
      
    - name: "Install latest @enterthenamehere/esdoc and @enterthenamehere/esdoc-standard-plugin globally"
      run: npm install -g @enterthenamehere/esdoc@dev @enterthenamehere/esdoc-accessor-plugin@dev @enterthenamehere/esdoc-brand-plugin@dev @enterthenamehere/esdoc-coverage-plugin@dev @enterthenamehere/esdoc-ecmascript-proposal-plugin@dev @enterthenamehere/esdoc-exclude-source-plugin@dev @enterthenamehere/esdoc-external-ecmascript-plugin@dev @enterthenamehere/esdoc-external-nodejs-plugin@dev @enterthenamehere/esdoc-external-webapi-plugin@dev @enterthenamehere/esdoc-flow-type-plugin@dev @enterthenamehere/esdoc-importpath-plugin@dev @enterthenamehere/esdoc-inject-gtm-plugin@dev @enterthenamehere/esdoc-inject-script-plugin@dev @enterthenamehere/esdoc-inject-style-plugin@dev @enterthenamehere/esdoc-integrate-manual-plugin@dev @enterthenamehere/esdoc-integrate-test-plugin@dev @enterthenamehere/esdoc-jsx-plugin@dev @enterthenamehere/esdoc-lint-plugin@dev @enterthenamehere/esdoc-publish-html-plugin@dev @enterthenamehere/esdoc-publish-markdown-plugin@dev @enterthenamehere/esdoc-react-plugin@dev @enterthenamehere/esdoc-type-inference-plugin@dev @enterthenamehere/esdoc-typescript-plugin@dev @enterthenamehere/esdoc-undocumented-identifier-plugin@dev @enterthenamehere/esdoc-unexported-identifier-plugin@dev @enterthenamehere/color-logger@dev @enterthenamehere/ice-cap@dev
    
    - name: "Get npm global path"
      run: npm config get prefix
    
    - name: "list packages"
      run: npm list --global --depth=1
      
name: Test installing @enterthenamehere/esdoc package locally
on:
  workflow_dispatch:

jobs:
  test-installation:
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        node-version: [14, 16, latest]
        os: [ubuntu-latest, macos_latest, windows_latest]
        package-manager: [npm]
    
    runs-on: ${{matrix.os}}
    steps:
    - name: "Use ${{matrix.node-version}} Node.js on ${{matrix.os}}"
      uses: actions/setup-node@v3
      with:
        node-version: ${{matrix.version}}
      
    - name: "Checkout repository with tests"
      uses: actions/checkout@v3
    
    - name: "Run installation script for test 1 with ${{matrix.package-manager}}"
      working-directory: ./test/fixture
      run: |
        ${{matrix.package-manager}} run local-test1${{matrix.package-manager}}

    - name: "Generate documentation with local esdoc"
      working-directory: ./test/fixture
      run: |
        ${{matrix.package-manager}} exec @enterthenamehere/esdoc --debug --verbose
    
    - name: "Run unit test 1"
      run: |
        ${{matrix.package-manager}} run local-test1
    
    - name: Remove generated documentation
      working-directory: ./test/fixture
      uses: JesseTG/rm@v1.0.0
      with:
        path: ./out
    
    - name: "./out directory should not exist"
      working-directory: ./test/fixture
      run: |
        ls

    - name: "Run installation script for test 2 with ${{matrix.package-manager}}"
      working-directory: ./test/fixture
      run: |
        ${{matrix.package-manager}} run local-test2${{matrix.package-manager}}

    - name: "Generate documentation with local esdoc"
      working-directory: ./test/fixture
      run: |
        ${{matrix.package-manager}} exec @enterthenamehere/esdoc --debug --verbose
    
    - name: "Run unit test 2"
      run: |
        ${{matrix.package-manager}} run local-test2
    
    - name: Remove generated documentation
      working-directory: ./test/fixture
      uses: JesseTG/rm@v1.0.0
      with:
        path: ./out
    
    - name: "./out directory should not exist"
      working-directory: ./test/fixture
      run: |
        ls

    - name: "Run installation script for test 3 with ${{matrix.package-manager}}"
      working-directory: ./test/fixture
      run: |
        ${{matrix.package-manager}} run local-test3${{matrix.package-manager}}

    - name: "Generate documentation with local esdoc"
      working-directory: ./test/fixture
      run: |
        ${{matrix.package-manager}} exec @enterthenamehere/esdoc --debug --verbose
    
    - name: "Run unit test 3"
      run: |
        ${{matrix.package-manager}} run local-test3
    
    - name: Remove generated documentation
      working-directory: ./test/fixture
      uses: JesseTG/rm@v1.0.0
      with:
        path: ./out
    
    - name: "./out directory should not exist"
      working-directory: ./test/fixture
      run: |
        ls


